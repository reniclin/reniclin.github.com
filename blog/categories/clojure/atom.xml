<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: clojure | Renic Lin]]></title>
  <link href="http://reniclin.github.com/blog/categories/clojure/atom.xml" rel="self"/>
  <link href="http://reniclin.github.com/"/>
  <updated>2012-12-12T15:31:10+08:00</updated>
  <id>http://reniclin.github.com/</id>
  <author>
    <name><![CDATA[Renic Lin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clojure proxy vs reify]]></title>
    <link href="http://reniclin.github.com/blog/2012/12/12/clojure-proxy-vs-reify/"/>
    <updated>2012-12-12T14:10:00+08:00</updated>
    <id>http://reniclin.github.com/blog/2012/12/12/clojure-proxy-vs-reify</id>
    <content type="html"><![CDATA[<h2>Clojure的proxy和reify</h2>

<br />




<!-- more -->


<p>這個問題是在用Clojure + awt/swing開發GUI程式時遇到的，</p>

<h6>（為什麼用awt/swing而不用 <a href="https://github.com/daveray/seesaw">seesaw</a> ？因為我要用到SystemTray， seesaw沒有wrapper它，加上我的程式很小。）</h6>

<p>用到像是<code>JButton</code>這種元件時，常會需要用<code>addActionListener</code>method 來 add<code>ActionListener</code>。</p>

<br />


<h5>Java的寫法如下：</h5>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">myJButton</span><span class="o">.</span><span class="na">addActionListener</span><span class="o">(</span><span class="k">new</span> <span class="n">ActionListener</span><span class="o">()</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kt">void</span> <span class="n">actionPerformed</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// do something here</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<br />


<h3>在Clojure中有兩種寫法，分別是用<code>proxy</code>和<code>reify</code>。</h3>

<h3>proxy</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="nf">.addActionListener</span> <span class="nv">my-jbutton&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;pre&gt;&lt;code&gt;</span>                <span class="p">(</span><span class="nb">proxy </span><span class="p">[</span><span class="nv">ActionListener</span><span class="p">]</span> <span class="p">[]</span>
</span><span class='line'>                  <span class="p">(</span><span class="nf">actionPerformed</span> <span class="p">[</span><span class="nv">evt</span><span class="p">]</span>
</span><span class='line'>                    <span class="c1">;; (do something here)</span>
</span><span class='line'>                    <span class="p">)))</span>
</span><span class='line'><span class="nv">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>reify</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="nf">.addActionListener</span> <span class="nv">my-jbutton&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;pre&gt;&lt;code&gt;</span>                <span class="p">(</span><span class="nf">reify</span> <span class="nv">ActionListener</span>
</span><span class='line'>                  <span class="p">(</span><span class="nf">actionPerformed</span> <span class="p">[</span><span class="nv">this</span> <span class="nv">evt</span><span class="p">]</span>
</span><span class='line'>                    <span class="c1">;; (do something here)</span>
</span><span class='line'>                    <span class="p">)))</span>
</span><span class='line'><span class="nv">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<br />


<h6><code>proxy</code>和<code>reify</code>一般都是用在實作interfaces，參考網路上的幾篇文章，講到平常大部份都使用時都用<code>reify</code>就好，</h6>

<h6>除了一些特別的用途才用<code>proxy</code>。（ig. override base class methods）</h6>

<h4>很大概的找一下資料，要再更深入研究一下<code>proxy</code>和<code>reify</code>的異同和主要用在哪些不一樣的地方。</h4>

<br />


<h3>參考</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/5821892/why-should-i-use-reify-instead-of-proxy-in-clojure">Why should I use Reify instead of proxy in clojure?</a></li>
<li><a href="http://pepijndevos.nl/how-reify-works-and-how-to-write-a-custom-typ/index.html">How reify works, and how to write a custom type</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clojure Read a File as a Sequence of Lines]]></title>
    <link href="http://reniclin.github.com/blog/2012/12/11/clojure-read-a-file-as-a-sequence-of-lines/"/>
    <updated>2012-12-11T09:04:00+08:00</updated>
    <id>http://reniclin.github.com/blog/2012/12/11/clojure-read-a-file-as-a-sequence-of-lines</id>
    <content type="html"><![CDATA[<h2>Clojure把檔案逐行讀成sequence</h2>

<!-- more -->


<p>Clojure (Lisp) 常用到sequence，讀檔時也可以把檔案逐行讀成sequence：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="nb">line-seq </span><span class="p">(</span><span class="nf">clojure.java.io/reader</span> <span class="p">(</span><span class="nf">clojure.java.io/file</span> <span class="s">&quot;file-path&quot;</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>讀出來的東西類似像這樣：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="s">&quot;line-1&quot;</span> <span class="s">&quot;line-2&quot;</span> <span class="s">&quot;line-3&quot;</span> <span class="s">&quot;line-4&quot;</span> <span class="s">&quot;line-4&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>讀成sequence之後就可以用doseq之類方便處裡sequence的macro來操作它，例如：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="nb">doseq </span><span class="p">[</span><span class="nv">line</span> <span class="p">(</span><span class="nb">line-seq </span><span class="p">(</span><span class="nf">clojure.java.io/reader</span> <span class="p">(</span><span class="nf">clojure.java.io/file</span> <span class="s">&quot;file-path&quot;</span><span class="p">)))]</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">println </span><span class="nv">line</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clojure noir getting start]]></title>
    <link href="http://reniclin.github.com/blog/2012/07/23/clojure-noir-getting-start/"/>
    <updated>2012-07-23T21:37:00+08:00</updated>
    <id>http://reniclin.github.com/blog/2012/07/23/clojure-noir-getting-start</id>
    <content type="html"><![CDATA[<h2>使用leiningen建立新noir專案</h2>

<!-- more -->


<p>noir是一套很好用的clojure web frameworks，紀錄一下安裝leiningen noir plugin的方法，
和如何使用leiningen建立一個新的noir專案，使用leiningen一樣簡單，不過leiningen 1.x
和leiningen 2.x 步驟有點不一樣，要注意一下。</p>

<h3>lein 1.x</h3>

<ul>
<li>安裝 leiningen noir plugin</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lein plugin install lein-noir 1.2.1
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>建立一個新的 noir 專案</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lein noir new my-web
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>cd 到剛剛建出來的資料夾</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>my-web
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>試跑一下</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lein run
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>成功跑起來之後可以用瀏覽器打開 http://localhost:8080 就可以看到歡迎畫面。</li>
</ul>


<h3>lein 2.x 的步驟比較簡單，不用先裝 plugin</h3>

<ul>
<li>建立一個新的 noir 專案</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lein new noir my-web
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>cd 到剛剛建出來的資料夾</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>my-web
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>試跑一下</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>lein run
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>成功跑起來之後可以用瀏覽器打開 http://localhost:8080 就可以看到歡迎畫面。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clojure building standalone jar with leiningen]]></title>
    <link href="http://reniclin.github.com/blog/2012/07/23/clojure-building-standalone-jar-with-leiningen/"/>
    <updated>2012-07-23T21:26:00+08:00</updated>
    <id>http://reniclin.github.com/blog/2012/07/23/clojure-building-standalone-jar-with-leiningen</id>
    <content type="html"><![CDATA[<h2>使用leiningen把clojure project打包成可以獨立執行的.jar檔</h2>

<!-- more -->


<p>前陣子在使用 seesaw 寫 desktop app，遇到想把所有 source code build 成單一執行檔的需求，
使用 leiningen，可以輕鬆把你的 source 和其它的 dependencies 包成一個可單獨執行 standalone 的 jar。</p>

<ul>
<li>在宣告ns時要加上 (:gen-class)，例如：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="kd">ns </span><span class="nv">my-namespace.core</span>
</span><span class='line'>  <span class="p">(</span><span class="ss">:import</span> <span class="p">[</span><span class="nv">java.util</span> <span class="nv">Calendar</span><span class="p">])</span>
</span><span class='line'>  <span class="p">(</span><span class="ss">:use</span> <span class="nv">seesaw.core&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;pre&gt;&lt;code&gt;</span>    <span class="nv">seesaw.graphics</span><span class="p">)</span>
</span><span class='line'><span class="nv">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span>  <span class="p">(</span><span class="ss">:gen-class</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在project.clj裡加上 :main，例如：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="kd">defproject </span><span class="nv">my-project</span> <span class="s">&quot;1.0.0-SNAPSHOT&quot;</span>
</span><span class='line'>  <span class="ss">:description</span> <span class="s">&quot;This is my clojure project&quot;</span>
</span><span class='line'>  <span class="ss">:dependencies</span> <span class="p">[[</span><span class="nv">org.clojure/clojure</span> <span class="s">&quot;1.3.0&quot;</span><span class="p">]</span><span class="nv">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;pre&gt;&lt;code&gt;</span>             <span class="p">[</span><span class="nv">org.clojure/core.match</span> <span class="s">&quot;0.2.0-alpha9&quot;</span><span class="p">]</span>
</span><span class='line'>             <span class="p">[</span><span class="nv">seesaw</span> <span class="s">&quot;1.2.2&quot;</span><span class="p">]]</span>
</span><span class='line'><span class="nv">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span>  <span class="ss">:main</span> <span class="nv">my-namespace.core</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><p>使用 leiningen 產生 jar</p>

<p>   $ lein uberjar</p></li>
<li><p>執行</p>

<p>   $ java -jar my-project-1.0.0-SNAPSHOT-standalone.jar</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
